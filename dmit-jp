let your_url = "";
let arg;
if (typeof $argument != 'undefined') {
    arg = Object.fromEntries($argument.split('&').map(item => item.split('=')));
};

// 检查配置
const URL = arg?.url || your_url;
if (!URL) $notification.post('配置错误❌', 'URL有误或无');

// 面板
let panel = {};
panel.title = arg?.title || 'DMIT-JP';
panel.icon = arg?.icon;

// 时间
let time = new Date();
const t = time.getHours() + ':' + time.getMinutes() + ':' + time.getSeconds();
console.log(t);

// 发送请求获取信息
const request = {
    url: URL,
    timeout: 3000
};

$httpClient.get(request, function(error, response, data) {
    if (error) {
        console.log('error: '+error);
        $done({title:'啊呃～', content:'完蛋了，出错了！看看是不是端口没打开？'+error});
    } else  {
        const Data = JSON.parse(data);

        console.log(Data);

        // Convert bytes to GB
        function bytesToGB(bytes) {
            return (bytes / (1024 * 1024 * 1024)).toFixed(2);
        }

        // Calculate remaining data
        const totalData = 300; // total data in GB
        const usedData = bytesToGB(parseFloat(Data.bytes_sent)) + bytesToGB(parseFloat(Data.bytes_recv));
        const remainingData = totalData - usedData;

        // 在原有代码的基础上改动
        panel.content = `统计时间：${Data.last_time}\n` +
            `入站: ${bytesToGB(Data.bytes_recv)} GB` + '    |    ' + 
            `出站: ${bytesToGB(Data.bytes_sent)} GB\n` +
            `用量: ${usedData} GB` + '     |    ' + 
            `总量: ${totalData} GB\n` +
            `剩余: ${remainingData.toFixed(2)} GB\n` +
            `CPU: ${Data.cpu_usage.toFixed(2)}%` + '           |    ' + 
            `内存: ${Data.mem_usage.toFixed(2)}%\n` +
            `服务到期时间：♾️`;

        $done(panel);
    }
});
